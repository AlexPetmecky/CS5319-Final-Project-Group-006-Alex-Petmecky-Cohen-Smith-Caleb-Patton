Index: src/main/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>public class Main {\n\tBlackboard blackboard;\n\tEmployeeDB employeedb;\n\tDateDB datedb;\n\n\tpublic static void main(String[] args) {\n\t\tmainfront mf = new mainfront();\n\t\tmf.setup();\n\t\tnew Main();\n\t}\n\t\n\tpublic Main() {\n\t\tblackboard = new Blackboard();\n\t\temployeedb = new EmployeeDB(blackboard);\n\t\tdatedb = new DateDB(blackboard);\n\t}\n\t\n\tpublic void terminate() {\n\t\tblackboard.terminate();\n\t\t// add code to close the GUI\n\t\t\n\t}\n\t\n\t// methods for GUI to call components\n\tpublic boolean clockIn(int id, String date, String time) {\n\t\treturn employeedb.clockIn(id, date, time);\n\t}\n\tpublic boolean clockOut(int id, String date, String time) {\n\t\treturn employeedb.clockOut(id, date, time);\n\t}\n\tpublic String getEmployeeStringData(int id) {\n\t\treturn employeedb.getEmployeeStringData(id);\n\t}\n\t\n\tpublic String getDateString(String date) {\n\t\treturn datedb.getDateString(date);\n\t}\n\tpublic String getAllDateStrings() {\n\t\treturn datedb.getAllDateStrings();\n\t}\n    \n}\n
===================================================================
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
--- a/src/main/java/Main.java	
+++ b/src/main/java/Main.java	
@@ -9,7 +9,7 @@
 		new Main();
 	}
 	
-	public Main() {
+	public Main(){
 		blackboard = new Blackboard();
 		employeedb = new EmployeeDB(blackboard);
 		datedb = new DateDB(blackboard);
Index: src/main/java/Blackboard.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\nimport java.io.BufferedReader;\nimport java.io.FileReader;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.io.File;\nimport java.util.HashMap;\nimport java.io.FileWriter;\nimport org.json.simple.JSONObject;\nimport org.json.simple.JSONArray;\nimport org.json.simple.parser.JSONParser;\nimport org.json.simple.parser.ParseException;\nimport java.io.FileNotFoundException;\nimport java.time.LocalTime;\nimport java.time.LocalDate;\n\npublic class Blackboard implements SubmitHandler{\n\n\t// store all data entries\n\tHashMap<String, DataEntry> directory;\n\t\n\t// store these for easier editing if needed\n\tString employeeDirectory = \"data/employees.json\";\n\tString dateDirectory = \"data/dates.json\";\n\t\n\t\n\tpublic Blackboard() {\n\t\tdirectory = new HashMap<String, DataEntry>();\n\t\tdirectory.put(\"employees\", new DataEntry(employeeDirectory));\n\t\tdirectory.put(\"dates\", new DataEntry(dateDirectory));\n\n\n\n\t\tdirectory.keySet();\n\n\t}\n\n\n\n\n\t\n\t\n\t\n\tpublic void terminate() {\n\t\tfor(DataEntry entry : directory.values()) {\n\t\t\tentry.terminate();\n\t\t}\n\t}\n\t\n\t\n\tpublic JSONObject getEmployeeData(int id) {\n\t\treturn (JSONObject)directory.get(\"employees\").array.get(id);\n\t}\n\tpublic synchronized boolean writeEmployeeData(int id, JSONObject updated) {\n\t\tJSONArray array = directory.get(\"employees\").array;\n\t\tif(id > array.size() ){\n\t\t\treturn false;\n\t\t}\n\t\tarray.add(id, updated);\n\t\tdirectory.get(\"employees\").array = array;\n\t\treturn true;\n\t}\n\t\n\tpublic JSONObject getDateData(String date) {\n\t\tJSONObject object = (JSONObject)directory.get(\"dates\").array.get(0);\n\n\t\tif(!object.containsKey(date)) {\n\t\t\tobject.put(date, new JSONObject());\n\t\t}\n\t\treturn (JSONObject)object.get(date);\n\t}\n\tpublic synchronized void writeDateData(String date, JSONObject updated) {\n\t\t((JSONObject)directory.get(\"dates\").array.get(0)).put(date, updated);\n\t}\n\tpublic JSONObject getMasterDateObject() {\n\t\treturn (JSONObject)directory.get(\"dates\").array.getFirst();\n\t}\n\tpublic synchronized void test(String pr) {\n\t\tSystem.out.println(pr);\n\t}\n\n\n\t@Override\n\tpublic void submitIn(String idNum) {\n\t\tSystem.out.println(\"SUBMITTED IN FROM BLACKBOARD\");\n\t\t//writeEmployeeData(idNum))\n\t}\n\n\t@Override\n\tpublic void submitOut(String idNum) {\n\t\tSystem.out.println(\"SUBMITTED OUT FROM BLACKBOARD\");\n\t}\n}\n\nclass DataEntry{\n\tpublic JSONArray array;\n\tprivate String directory;\n\t\n\tpublic DataEntry(String dir) {\n\t\tdirectory = dir;\n\t\tJSONParser parser = new JSONParser();\n\t\ttry {\n\t\t\t// probably want to add something here that creates the file if it doesn't exist\n\t\t\tarray = (JSONArray)(parser.parse(new FileReader(directory)));\n\t\t} catch (IOException | ParseException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t}\n\tpublic void terminate() {\n\t\tFileWriter writer;\n\t\ttry {\n\t\t\twriter = new FileWriter(directory);\n\t\t\twriter.write(array.toString());\n\t\t\twriter.close();\n\t\t} catch (IOException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t\n\t}\n}\n
===================================================================
diff --git a/src/main/java/Blackboard.java b/src/main/java/Blackboard.java
--- a/src/main/java/Blackboard.java	
+++ b/src/main/java/Blackboard.java	
@@ -84,7 +84,7 @@
 	@Override
 	public void submitIn(String idNum) {
 		System.out.println("SUBMITTED IN FROM BLACKBOARD");
-		//writeEmployeeData(idNum))
+
 	}
 
 	@Override
